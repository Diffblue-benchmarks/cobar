package com.alibaba.cobar.parser.recognizer.mysql;

import com.alibaba.cobar.parser.recognizer.mysql.MySQLToken;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.rules.Timeout;

import java.lang.reflect.Array;



public class MySQLTokenTest {

  @Rule
  public final Timeout globalTimeout = new Timeout(10000);

  @Rule
  public final ExpectedException thrown = ExpectedException.none();

  // Test written by Diffblue Cover
  @Test
  public void keyWordToStringInputEofOutputIllegalArgumentException99994e30aba1d866c5d() {

    // Arrange
    final MySQLToken arg0 = MySQLToken.EOF;

    // Act
    thrown.expect(IllegalArgumentException.class);
    MySQLToken.keyWordToString(arg0);

    // The method is not expected to return due to exception thrown

  }

  // Test written by Diffblue Cover
  @Test
  public void valueOfInputNotNullOutputIllegalArgumentException9999f928c51828e736b() {

    // Arrange
    final String arg0 = " ";

    // Act
    thrown.expect(IllegalArgumentException.class);
    MySQLToken.valueOf(arg0);

    // The method is not expected to return due to exception thrown

  }

  // Test written by Diffblue Cover
  @Test
  public void valuesOutput276999507e13ce76a28979() {

    // Act
    final MySQLToken[] actual = MySQLToken.values();

    // Assert result
    Assert.assertArrayEquals(new MySQLToken[]{ MySQLToken.EOF, MySQLToken.PLACE_HOLDER, MySQLToken.IDENTIFIER, MySQLToken.SYS_VAR, MySQLToken.USR_VAR, MySQLToken.LITERAL_NUM_PURE_DIGIT, MySQLToken.LITERAL_NUM_MIX_DIGIT, MySQLToken.LITERAL_HEX, MySQLToken.LITERAL_BIT, MySQLToken.LITERAL_CHARS, MySQLToken.LITERAL_NCHARS, MySQLToken.LITERAL_NULL, MySQLToken.LITERAL_BOOL_TRUE, MySQLToken.LITERAL_BOOL_FALSE, MySQLToken.QUESTION_MARK, MySQLToken.PUNC_LEFT_PAREN, MySQLToken.PUNC_RIGHT_PAREN, MySQLToken.PUNC_LEFT_BRACE, MySQLToken.PUNC_RIGHT_BRACE, MySQLToken.PUNC_LEFT_BRACKET, MySQLToken.PUNC_RIGHT_BRACKET, MySQLToken.PUNC_SEMICOLON, MySQLToken.PUNC_COMMA, MySQLToken.PUNC_DOT, MySQLToken.PUNC_COLON, MySQLToken.PUNC_C_STYLE_COMMENT_END, MySQLToken.OP_EQUALS, MySQLToken.OP_GREATER_THAN, MySQLToken.OP_LESS_THAN, MySQLToken.OP_EXCLAMATION, MySQLToken.OP_TILDE, MySQLToken.OP_PLUS, MySQLToken.OP_MINUS, MySQLToken.OP_ASTERISK, MySQLToken.OP_SLASH, MySQLToken.OP_AMPERSAND, MySQLToken.OP_VERTICAL_BAR, MySQLToken.OP_CARET, MySQLToken.OP_PERCENT, MySQLToken.OP_ASSIGN, MySQLToken.OP_LESS_OR_EQUALS, MySQLToken.OP_LESS_OR_GREATER, MySQLToken.OP_GREATER_OR_EQUALS, MySQLToken.OP_NOT_EQUALS, MySQLToken.OP_LOGICAL_AND, MySQLToken.OP_LOGICAL_OR, MySQLToken.OP_LEFT_SHIFT, MySQLToken.OP_RIGHT_SHIFT, MySQLToken.OP_NULL_SAFE_EQUALS, MySQLToken.KW_ACCESSIBLE, MySQLToken.KW_ADD, MySQLToken.KW_ALL, MySQLToken.KW_ALTER, MySQLToken.KW_ANALYZE, MySQLToken.KW_AND, MySQLToken.KW_AS, MySQLToken.KW_ASC, MySQLToken.KW_ASENSITIVE, MySQLToken.KW_BEFORE, MySQLToken.KW_BETWEEN, MySQLToken.KW_BIGINT, MySQLToken.KW_BINARY, MySQLToken.KW_BLOB, MySQLToken.KW_BOTH, MySQLToken.KW_BY, MySQLToken.KW_CALL, MySQLToken.KW_CASCADE, MySQLToken.KW_CASE, MySQLToken.KW_CHANGE, MySQLToken.KW_CHAR, MySQLToken.KW_CHARACTER, MySQLToken.KW_CHECK, MySQLToken.KW_COLLATE, MySQLToken.KW_COLUMN, MySQLToken.KW_CONDITION, MySQLToken.KW_CONSTRAINT, MySQLToken.KW_CONTINUE, MySQLToken.KW_CONVERT, MySQLToken.KW_CREATE, MySQLToken.KW_CROSS, MySQLToken.KW_CURRENT_DATE, MySQLToken.KW_CURRENT_TIME, MySQLToken.KW_CURRENT_TIMESTAMP, MySQLToken.KW_CURRENT_USER, MySQLToken.KW_CURSOR, MySQLToken.KW_DATABASE, MySQLToken.KW_DATABASES, MySQLToken.KW_DAY_HOUR, MySQLToken.KW_DAY_MICROSECOND, MySQLToken.KW_DAY_MINUTE, MySQLToken.KW_DAY_SECOND, MySQLToken.KW_DEC, MySQLToken.KW_DECIMAL, MySQLToken.KW_DECLARE, MySQLToken.KW_DEFAULT, MySQLToken.KW_DELAYED, MySQLToken.KW_DELETE, MySQLToken.KW_DESC, MySQLToken.KW_DESCRIBE, MySQLToken.KW_DETERMINISTIC, MySQLToken.KW_DISTINCT, MySQLToken.KW_DISTINCTROW, MySQLToken.KW_DIV, MySQLToken.KW_DOUBLE, MySQLToken.KW_DROP, MySQLToken.KW_DUAL, MySQLToken.KW_EACH, MySQLToken.KW_ELSE, MySQLToken.KW_ELSEIF, MySQLToken.KW_ENCLOSED, MySQLToken.KW_ESCAPED, MySQLToken.KW_EXISTS, MySQLToken.KW_EXIT, MySQLToken.KW_EXPLAIN, MySQLToken.KW_FETCH, MySQLToken.KW_FLOAT, MySQLToken.KW_FLOAT4, MySQLToken.KW_FLOAT8, MySQLToken.KW_FOR, MySQLToken.KW_FORCE, MySQLToken.KW_FOREIGN, MySQLToken.KW_FROM, MySQLToken.KW_FULLTEXT, MySQLToken.KW_GENERAL, MySQLToken.KW_GRANT, MySQLToken.KW_GROUP, MySQLToken.KW_HAVING, MySQLToken.KW_HIGH_PRIORITY, MySQLToken.KW_HOUR_MICROSECOND, MySQLToken.KW_HOUR_MINUTE, MySQLToken.KW_HOUR_SECOND, MySQLToken.KW_IF, MySQLToken.KW_IGNORE, MySQLToken.KW_IGNORE_SERVER_IDS, MySQLToken.KW_IN, MySQLToken.KW_INDEX, MySQLToken.KW_INFILE, MySQLToken.KW_INNER, MySQLToken.KW_INOUT, MySQLToken.KW_INSENSITIVE, MySQLToken.KW_INSERT, MySQLToken.KW_INT, MySQLToken.KW_INT1, MySQLToken.KW_INT2, MySQLToken.KW_INT3, MySQLToken.KW_INT4, MySQLToken.KW_INT8, MySQLToken.KW_INTEGER, MySQLToken.KW_INTERVAL, MySQLToken.KW_INTO, MySQLToken.KW_IS, MySQLToken.KW_ITERATE, MySQLToken.KW_JOIN, MySQLToken.KW_KEY, MySQLToken.KW_KEYS, MySQLToken.KW_KILL, MySQLToken.KW_LEADING, MySQLToken.KW_LEAVE, MySQLToken.KW_LEFT, MySQLToken.KW_LIKE, MySQLToken.KW_LIMIT, MySQLToken.KW_LINEAR, MySQLToken.KW_LINES, MySQLToken.KW_LOAD, MySQLToken.KW_LOCALTIME, MySQLToken.KW_LOCALTIMESTAMP, MySQLToken.KW_LOCK, MySQLToken.KW_LONG, MySQLToken.KW_LONGBLOB, MySQLToken.KW_LONGTEXT, MySQLToken.KW_LOOP, MySQLToken.KW_LOW_PRIORITY, MySQLToken.KW_MASTER_HEARTBEAT_PERIOD, MySQLToken.KW_MASTER_SSL_VERIFY_SERVER_CERT, MySQLToken.KW_MATCH, MySQLToken.KW_MAXVALUE, MySQLToken.KW_MEDIUMBLOB, MySQLToken.KW_MEDIUMINT, MySQLToken.KW_MEDIUMTEXT, MySQLToken.KW_MIDDLEINT, MySQLToken.KW_MINUTE_MICROSECOND, MySQLToken.KW_MINUTE_SECOND, MySQLToken.KW_MOD, MySQLToken.KW_MODIFIES, MySQLToken.KW_NATURAL, MySQLToken.KW_NOT, MySQLToken.KW_NO_WRITE_TO_BINLOG, MySQLToken.KW_NUMERIC, MySQLToken.KW_ON, MySQLToken.KW_OPTIMIZE, MySQLToken.KW_OPTION, MySQLToken.KW_OPTIONALLY, MySQLToken.KW_OR, MySQLToken.KW_ORDER, MySQLToken.KW_OUT, MySQLToken.KW_OUTER, MySQLToken.KW_OUTFILE, MySQLToken.KW_PRECISION, MySQLToken.KW_PRIMARY, MySQLToken.KW_PROCEDURE, MySQLToken.KW_PURGE, MySQLToken.KW_RANGE, MySQLToken.KW_READ, MySQLToken.KW_READS, MySQLToken.KW_READ_WRITE, MySQLToken.KW_REAL, MySQLToken.KW_REFERENCES, MySQLToken.KW_REGEXP, MySQLToken.KW_RELEASE, MySQLToken.KW_RENAME, MySQLToken.KW_REPEAT, MySQLToken.KW_REPLACE, MySQLToken.KW_REQUIRE, MySQLToken.KW_RESIGNAL, MySQLToken.KW_RESTRICT, MySQLToken.KW_RETURN, MySQLToken.KW_REVOKE, MySQLToken.KW_RIGHT, MySQLToken.KW_RLIKE, MySQLToken.KW_SCHEMA, MySQLToken.KW_SCHEMAS, MySQLToken.KW_SECOND_MICROSECOND, MySQLToken.KW_SELECT, MySQLToken.KW_SENSITIVE, MySQLToken.KW_SEPARATOR, MySQLToken.KW_SET, MySQLToken.KW_SHOW, MySQLToken.KW_SIGNAL, MySQLToken.KW_SLOW, MySQLToken.KW_SMALLINT, MySQLToken.KW_SPATIAL, MySQLToken.KW_SPECIFIC, MySQLToken.KW_SQL, MySQLToken.KW_SQLEXCEPTION, MySQLToken.KW_SQLSTATE, MySQLToken.KW_SQLWARNING, MySQLToken.KW_SQL_BIG_RESULT, MySQLToken.KW_SQL_CALC_FOUND_ROWS, MySQLToken.KW_SQL_SMALL_RESULT, MySQLToken.KW_SSL, MySQLToken.KW_STARTING, MySQLToken.KW_STRAIGHT_JOIN, MySQLToken.KW_TABLE, MySQLToken.KW_TERMINATED, MySQLToken.KW_THEN, MySQLToken.KW_TINYBLOB, MySQLToken.KW_TINYINT, MySQLToken.KW_TINYTEXT, MySQLToken.KW_TO, MySQLToken.KW_TRAILING, MySQLToken.KW_TRIGGER, MySQLToken.KW_UNDO, MySQLToken.KW_UNION, MySQLToken.KW_UNIQUE, MySQLToken.KW_UNLOCK, MySQLToken.KW_UNSIGNED, MySQLToken.KW_UPDATE, MySQLToken.KW_USAGE, MySQLToken.KW_USE, MySQLToken.KW_USING, MySQLToken.KW_UTC_DATE, MySQLToken.KW_UTC_TIME, MySQLToken.KW_UTC_TIMESTAMP, MySQLToken.KW_VALUES, MySQLToken.KW_VARBINARY, MySQLToken.KW_VARCHAR, MySQLToken.KW_VARCHARACTER, MySQLToken.KW_VARYING, MySQLToken.KW_WHEN, MySQLToken.KW_WHERE, MySQLToken.KW_WHILE, MySQLToken.KW_WITH, MySQLToken.KW_WRITE, MySQLToken.KW_XOR, MySQLToken.KW_YEAR_MONTH, MySQLToken.KW_ZEROFILL }, actual);

  }
}
